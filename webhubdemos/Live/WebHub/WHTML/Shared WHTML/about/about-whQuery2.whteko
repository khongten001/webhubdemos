<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE whteko PUBLIC "http://static.webhub.com/dtd/0214/whteko.dtd">
<whteko defaultlingvo="eng" designmode="code">
<whmacros>
mcWhDemoOneLinerHTQ2=SQL - Multiple Open Queries
mcWhDemoCreditIdeaHTQ2=Ann Lynnworth
mcWhDemoCreditFirstDraftHTQ2=Ann Lynnworth
mcWhDemoCreditGraphicsHTQ2=Rob Daniels
mcWhDemoCreditCopyHTQ2=Rob Daniels
mcWhDemoUpdatedHTQ2=30-Jan-2013
mcWhDemoKeywordsHTQ2=database,query,sql,dynamic content,multi-query example
mcWhDemoLiteHTQ2=No
</whmacros>

<whdroplet name="drDemoSetupHTQ2">
<ol>
<li> Requires whQuery2.exe </li>
<li> In PAS code, make sure the ConnectionString is valid for your system.  </li>
<li> Note that FullConvert Pro was used in January 2013 to convert the employee.db from 
Paradox format to Access/MDB format.</li>
<li> Check the whQuery2Spec.whteko file; that configures the query.
You can change it to anything valid on your system. </li>
<li> To reset the counter of sessions, edit the file <code>whQuery2.hitcount.txt</code> in the 
same folder as whQuery2.exe. </li>
</li>
</ol>
</whdroplet>


<whtranslation key="~whDemoShortDescHTQ2">
This example shows (a) how to work with multiple open queries so that you can 
support multiple surfers; (b) how to use an INI file to configure the details of the query setup 
so that you can make changes without recompiling; and (c) a visitor counter.
</whtranslation>


<whtranslation key="~whDemoLongDescHTQ2">
<h3>Delphi Project Notes</h3>
<p>The databasename and tablename are specified in a configuration file rather than hardcoded into the project.</p>

<p>Multiple open queries are handled automatically!  To prove this to yourself, run one query.  
Then open another web browser and start again as a new surfer.  Notice that you can scroll resulting 
grids independently. This &quot;cloning&quot; capability is handled by the WebDataSource 
component.</p>

<p>Precisely because this is a somewhat generic query example, the code is more advanced.  If you 
are new to Delphi, start with one of the other query examples.</p>

<p>To get oriented, look at the query configuration information in whQuery2Spec.xml. That controls the query.</p>

<p>You should be able to make this demo run with the employee.xml file available from Embarcadero Samples (subversion), 
and you should be able to change the path, tablename and HTML droplet information to fit any other
single-table query you want to do.</p>

<p>The whole idea is to have the SQL statement built on the fly -- partly based
on information in the configuration file, and partly based on surfer's data entry. 
If this were not meant to be generic, different techniques would
be used for setting hot fields, etc.</p>

<h3>What makes this project interesting and tricky?</h3>
The reason this project is not straightforward is that we are building the SQL statement 
on the fly.
<ul>
<li>(~mcWhDemoDot~) Because we do not know the list of fields to select at design time,
  we can not simply type in the SQL into QUERY1.SQL. Instead, that is done
  when the form activates.</li>

<li>(~mcWhDemoDot~) We really want to do a 'LIKE' search, not an exact match.  And
  we don't want the surfer to need to know about % symbols.  That
  makes things tricky because we have to adjust the StringVars on the
  fly.  i.e. if the surfer enters 'S' we want to change that to 'S%'.</li>
</ul>
</whtranslation>

</whteko>