<!DOCTYPE whteko PUBLIC "-//HREF//DTD whteko stage 2.14//Strict//EN//" "http://webhub.com/dtd/0214/whteko.dtd">
<whteko defaultlingvo="eng" designmode="code">

<whpagesettingslist id="a">
whsequence=on
whSequenceUp=PGJAVA
whSequenceFinal=PGJAVA
bSeqHdr=true
bReqUl=false
level=2
levelKeyword=Java
htmlFilename=2Java.whteko
showcaseBranch=(~GO|pgJava|Java. JavaScript and XML~) &raquo;
showcaseBranchText=Java, JavaScript and XML: 
</whpagesettingslist>

<whpage pageid="pgJavacl" desc="Clock Example">
<whpagesettings inherit="a">
bNoMore=true
</whpagesettings>
(~drShowcaseGlobalHeader~)
This is a simple example of a JavaScript clock. 
To include Java applets and scripts in your pages,
all you need to do is place the appropriate droplet in your page code.
<p>(~chJavaCl~)</p>
(~drShowcaseGlobalFooter~)
</whpage>



<whpage pageid="pgMarquee1" desc="Tickertape Marquee Example">
<whpagesettings inherit="a">
bNoMore=true
</whpagesettings>
<whprep>
(~NOTASSIGNED|surfername|(~SET|surfername=SUSAN~)~)
</whprep>
(~drShowcaseGlobalHeader~)
(~ANCHORMODIFY|anchBaseHREF,replace|<base href="(~Request.URLToAuthority~)/webhub/demos/whShowcase/java/"/>~)

<h2>JavaScript Marquee Examle</h2>
<p>(~chMarquee1~)</p>

<h2>Java Examples</h2>
<p>Java source was precompiled online thanks to
<a href="http://www.innovation.ch/java/java_compile.html">innovation.ch</a>.</p>

<h3>Test Java Version</h3>
This example shows the version of Java installed.
<applet code="JavaVersionDisplayApplet.java" width="400" height="50"></applet>

<h3>Test Java Welcome APPLET</h3>
<p>This example shows how a parameter can be passed to the Java applet.</p>

<applet code="Welcome" width="250" height="50" >
<param name="surfername"    value="(~surfername~)">
</applet>

(~drShowcaseGlobalFooter~)
</whpage>

<whpage pageid="pgSimpleAjax" desc="Simple Ajax Example">
<whdoc for="credits">
17-Jul-2006

This example was adapted from the code 
at http://www.degraeve.com/reference/simple-ajax-example.php
</whdoc>
<whpagesettings inherit="a">
bNoMore=true
</whpagesettings>
(~mcdoctypehtml~)
<html>
<head>
(~ANCHOR|anRefresh~) (~waLingvo.execute~)
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="description" content="This page is summarized as (~pagedesc~)" />
<meta name="generator" content="(~version~)" />
<title>Page (~PageID~): (~PageDesc~) (in the "(~AppID~)" WebHub Demo)</title>
(~HEADER|Cache-Control: no-cache, no-store, must-revalidate~)
<link rel="stylesheet" type="text/css" href="(~mcSiteRoot~)demos/c/whdemos.css" />
	(~JS|ScriptTag|src="http://webhub.com/js/prototype-1.4.0.js"~)
<style type="text/css">
  (~ASSIGNED|litWallpaper|body {background: url((~mcSiteRoot~)demos/img/textures/(~litWallpaper~)) repeat; }~)
.currentnode {
  font-weight:700;
  color: #A22222;
}</style>

    <script type="text/javascript">
		function setAJAXEvents()
		{
			(~AJAXObserver|tagtype="form" id="f1" frequency="1"|update="result" position="top"~)
		}
		onload = setAJAXEvents
	</script>
</head>
<body>
(~drPageBegin~)
<div id="whdemopagecontent">
(~MATCH|(~pagesetting.bSeqHdr~)=true|(~drShowcaseExtraHeader~)~)

<form id="f1" accept-charset="UTF-8" method="post" action="(~ACTIONR|pgSimpleAjaxFillin~)">
  <p>Enter a word: <input name="word" type="text" />  
  </p>
  <div id="result"></div>
</form>
<br/><br/>
<h2>See Also</h2>
<p>See also the (~JUMP|htaj:pgwelcome|WebHub AJAX Demo~)</p>
</div>
(~drShowcaseGlobalFooter~)
</whpage>


<whpage pageid="pgAboutXML" desc="About XML">
<whpagesettings inherit="a">
bNoMore=true
</whpagesettings>
(~drShowcaseGlobalHeader~)
<p></p>WebHub applications can serve XML documents as long as the containing page 
specifies the correct content type.  In WebHub, this is done by using the SETPROLOGUEMODE command in the WHTEKO file, or by calling SetContentType from Delphi. (NB: formerly SETPROLOGUETYPE, until v2.099.)</p>
<p>(~JUMP|pgXmlSample|Click to see a tiny XML document~)</p>
<p>Here is a fancier XML file which is being translated via an XSL document.  
This example was published by 
<a href="http://www.ibm.com/developerworks/library/x-think41/">ibm.com</a> and we only modified the paths to the XSL document.  Here is it served raw -- NOT by WebHub: <a href="/webhub/demos/whShowcase/employees.xml">employees.xml file</a></p>
<p>Here it is again, served by WebHub (should look the same in your browser): (~JUMP|pgXmlSample2|Employee data served by WebHub.~)</p>
(~drShowcaseGlobalFooter~)
</whpage>

<whpage pageid="pgAboutCSV" desc="About Comma-Separated Value Files">
<whpagesettings inherit="a">
bNoMore=true
</whpagesettings>
(~drShowcaseGlobalHeader~)
WebHub applications can serve Comma-Separated Value (&quot;CSV&quot;) documents as long as the containing page specifies the correct content type.  In WebHub, this is done by using the SETPROLOGUEMODE command in the WHTEKO file, or by calling SetContentType from Delphi.
<p>Documents may be linked to directly, or served by the SENDFILE command.</p>
<p><a href="/webhub/demos/whShowcase/SampleScoreList.csv">raw file, served by http server software</a></p>
<p>(~JUMP|pgCSVSample,/SampleScoreList.csv|csv data included on a page by WebHub~)</p>
<p>Here is the same content, served by the SENDFILE command (should look the same in your browser): (~JUMP|pgCSVSample2,/SampleScoreList.csv|csv data served by WebHub.~)</p>
<h2>Example links on HREF's demo server</h2>
<p><a href="http://demos.href.com/webhub/demos/whShowcase/SampleScoreList.csv">test 1</a></p>
<p><a href="http://demos.href.com/scripts/runisa.dll/SampleScoreList.csv?showcase:pgCSVSample2:(~RawSessionNumber~):/SampleScoreList.csv">test 2</a></p>
<p><a href="http://demos.href.com/showcase:pgCSVSample2:(~RawSessionNumber~):/SampleScoreList.csv">test 3</a></p>
(~drShowcaseGlobalFooter~)
</whpage>

</whteko>