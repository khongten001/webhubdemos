JGCSCS
5
WebHub Delphi
*.whteko
HREF Tools Corp.
webmaster@href.com
http://www.href.com/

TRUE
<!---
-->
1
Use this for highlighting WebHub *.whteko files. 
104
<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE whteko PUBLIC "http://static.webhub.com/dtd/0214/whteko.dtd">
<whteko
designdynsrc="mydynsrc" defaultlingvo="eng" designlingvo="eng" designpage="news"
showdoc="no" showsketch="yes" notes="This is a sample WHTEKO file">

<whpagesettingslist id="setlist1">
asetting=aaaaa
</whpagesettingslist>

<whdroplet name="drToday">
(~CentralInfo.WebTimeGMT~)
</whdroplet>

<whmacros>
mcHello=Hello, world!
</whmacros>


<whpage pageid="news" desc="latest news">
<whpagesettings inherit="setlist1">
style=bbb
</whpagesettings>
<whprep>
(~waSecurity.execute|~)
</whprep>
<whoutput>
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>everything about the latest news</title>
<link rel="stylesheet" type="text/css" href="..." />
</head>
<body>
<h1>Headline</h1>
(~waAction1.execute|~)
<!--- hidden comments -->
// one line comments
<whsketch for="waAction1" show="no">
Hello, world.
</whsketch>
<h2>
[~Second Headline~]</h2>
<whtranslation key="~content2">
And now we discuss everything you need to know
about the second headline, including how it relates to money, religion and
politics.
</whtranslation>
(~waScanData.execute|drTable~)
<whdroplet name="drTable"show="no">
<table id="tableid-table" class="(~PageSetting.style~)">
<tr><td>
[~English 1A~]
</td><td>
[~English 1B~]
</td></tr>
<whrow>
<tr><td>sample1</td><td>sample2</td></tr>
</whrow>
</table>
</whdroplet>

<whdoc for="waScanData">
explanation about how this webaction operates...
</whdoc>

<h2>Another Headline</h2>
Table content repeats:
(~waScanData.execute|drTable~)
<whremote dynsrc="WH3">
(~waAdvertisement.execute|~)
</whremote>
</body>
</whoutput>
</whpage>
<whpage pageid="snippetpage" desc="a snippet test page" mode="scaffold">
<whdroplet name="drCopyright">
Copyright 2004-(~CentralInfo.YearGMT~) My Company
</whdroplet>

</whpage>
<whpage pageid="mypage3" desc="my translation page" mode="translation" defaultlingvo="deu" >
<whtranslation key="~content2" show="no">
Und jetzt besprechen wir alles, das Sie über die zweite Schlagzeile wissen
müssen und mit einschließen, wie sie auf Geld, Religion und Politik bezieht.
</whtranslation>
<whtranslations>
~Second Headline=Schlagzeile
~English 1A=Deutsch 1A
~English 1B=Deutsch 1B
</whtranslations>
<whtranslation key="~content2" lingvo="fra" show="no">
Et maintenant nous discutons tout que vous devez savoir le deuxième titre,
incluant comment il se relie à l'argent, à la religion et à la politique.
</whtranslation>
<whtranslations lingvo="fra">
~Second Headline=titre
~English 1A=Français 1A
~English 1B=Français 1B
</whtranslations>
</whpage>

</whteko>
0
TRUE
21
any whteko tag

<(/)?wh([^>])*>
FALSE
FALSE
27
0


16
FALSE
TRUE
FALSE
TRUE


/>

FALSE

Teko script closing tag
We didn't include this in the ASP script tag match, so the %> would always be colored as we want it, even if there is an unterminated comment or string in the code
\G~\)
FALSE
FALSE
32
0


0
FALSE
FALSE
FALSE
FALSE

0
(~ ~)

FALSE
<%
Script closing tag
We didn't include this in the ASP script tag match, so </script> would always be colored as we want it, even if there is an unterminated comment or string in the code
\G</script>
FALSE
FALSE
32
0


0
FALSE
FALSE
FALSE
FALSE

0
script
xml
FALSE
<script>
WebHub Parentils

(\(~[$@])[^()~]++(~\))
FALSE
FALSE
11
0


0
FALSE
FALSE
FALSE
FALSE
1
2


FALSE

WebHub script tag
not sure
\(~#?.*?(?=~\)|\z)
FALSE
TRUE
32
0


13
FALSE
FALSE
FALSE
FALSE




FALSE

XML script tag

<script[^<>]*+>.*?(?=</script>|\z)
FALSE
TRUE
32
0


13
FALSE
FALSE
FALSE
FALSE




FALSE

Closing Tag
</tag>
</([:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][-.0-9:A-Z_a-z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]*+)\s*+>
FALSE
FALSE
6
0


0
FALSE
FALSE
FALSE
FALSE

0
\1
xml
FALSE
<\1>
Single tag
<tag.../>  complicated regex makes sure <tag gets matched up with its /> even if there is ASP code inside the tag or its attributes
<([:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][-.0-9:A-Z_a-z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]*+)(?=(?:[^"'<>/]*+|'(?>[^'<]++|<%.*?%>)*+'|"(?>[^"<]++|<%.*?%>)*+"|<%.*?%>|/)*/>)
FALSE
TRUE
6
0


6
FALSE
FALSE
FALSE
FALSE
0

/>
xml
FALSE

Opening Tag
<tag> for which </tag> is expected
<([:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][-.0-9:A-Z_a-z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]*+)\s*+>
FALSE
FALSE
6
0


0
FALSE
FALSE
FALSE
FALSE
0

\1
xml
FALSE
</\1>
Opening Tag
<tag for which attributes and </tag> are expected
<([:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][-.0-9:A-Z_a-z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]*+)
FALSE
FALSE
6
0


6
FALSE
FALSE
FALSE
FALSE
0

\1
xml
FALSE
</\1>
Comment

<!--
FALSE
FALSE
9
0


3
FALSE
FALSE
FALSE
FALSE
0

<!-->
xml
FALSE
-->
CDATA

<!\[CDATA\[
FALSE
FALSE
17
0


4
FALSE
FALSE
FALSE
FALSE
0

[CDATA]
xml
FALSE
]]>
DTD Tag

<![:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][-.0-9:A-Z_a-z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]*+
FALSE
FALSE
6
0


9
FALSE
FALSE
FALSE
FALSE
0

<!>
xml
FALSE
>
Processing instruction

<\?
FALSE
FALSE
11
0


5
FALSE
FALSE
FALSE
FALSE
0

<?
xml
FALSE
?>
Entity

&(?:#\d++|#x[\dA-Z]++|\w++);
FALSE
FALSE
12
0


0
FALSE
FALSE
FALSE
FALSE




FALSE



\(
FALSE
FALSE
0
0


0
FALSE
FALSE
FALSE
FALSE
0

(content)
content
FALSE
)


\)
FALSE
FALSE
0
0


0
FALSE
FALSE
FALSE
FALSE

0
(content)
content
FALSE
(


\[
FALSE
FALSE
0
0


0
FALSE
FALSE
FALSE
FALSE
0

[content]
content
FALSE
]


]
FALSE
FALSE
0
0


0
FALSE
FALSE
FALSE
FALSE

0
[content]
content
FALSE
[


{
FALSE
FALSE
0
0


0
FALSE
FALSE
FALSE
FALSE
0

{content}
content
FALSE
}


}
FALSE
FALSE
0
0


0
FALSE
FALSE
FALSE
FALSE

0
{content}
content
FALSE
{
0
14
XML Comment
1
9
TRUE
0


3
Closing -->

-->
FALSE
FALSE
9
0


2
FALSE
FALSE
FALSE
FALSE

0
<!-->
xml
FALSE

URL

\b(?:(?:https?|ftp|file)://|www\.|ftp\.)(?:\([-A-Z0-9+&@#/%=~_|$?!:,.]*\)|[-A-Z0-9+&@#/%=~_|$?!:,.])*(?:\([-A-Z0-9+&@#/%=~_|$?!:,.]*\)|[A-Z0-9+&@#/%=~_|$])
TRUE
FALSE
2
1


0
FALSE
FALSE
FALSE
FALSE




FALSE

email address

\b(?:mailto:)?[A-Z0-9._%+-]++@(?:[A-Z0-9-]++\.)++[A-Z]{2,6}+\b
TRUE
FALSE
2
3


0
FALSE
FALSE
FALSE
FALSE




FALSE

CDATA
1
17
TRUE
0


1
Closing tag

]]>
FALSE
FALSE
17
0


2
FALSE
FALSE
FALSE
FALSE

0
[CDATA]
xml
FALSE

Processing instruction
1
11
FALSE
0


2
Closing ?>

\?>
FALSE
FALSE
11
0


0
FALSE
FALSE
FALSE
FALSE

0
<?
xml
FALSE

Another tag
Though not valid in XML, we permit < tags to keep syntax coloring consistent while the file is being edited
(?=<)
FALSE
FALSE
6
0


2
FALSE
FALSE
FALSE
FALSE




FALSE

XML Tag
1
7
FALSE
0


6


=
FALSE
FALSE
23
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Double-quoted value

"
FALSE
FALSE
8
0


7
FALSE
FALSE
FALSE
FALSE
0

DQ
xml
FALSE
"
Single-quoted value

'
FALSE
FALSE
8
0


8
FALSE
FALSE
FALSE
FALSE
0

SQ
xml
FALSE
'
Closing >

>
FALSE
FALSE
6
0


2
FALSE
FALSE
FALSE
FALSE




FALSE

Closing />

/>
FALSE
FALSE
6
0


2
FALSE
FALSE
FALSE
FALSE

0
/>
xml
FALSE

Another tag
Though not valid in XML, we permit < tags to keep syntax coloring consistent while the file is being edited
(?=<)
FALSE
FALSE
6
0


2
FALSE
FALSE
FALSE
FALSE




FALSE

DQ Attribute
1
8
FALSE
0


5
Closing quote

"
FALSE
FALSE
8
0


6
FALSE
FALSE
FALSE
FALSE

0
DQ
xml
FALSE

ASP Expression

(<%\$)[^<>%]++(%>)
FALSE
FALSE
11
0


0
FALSE
FALSE
FALSE
FALSE
1
2


FALSE

ASP script tag

<%#?.*?(?=%>|\z)
FALSE
FALSE
11
0


13
FALSE
FALSE
FALSE
FALSE




FALSE

ASP script closing tag
We didn't include this in the ASP script tag match, so the %> would always be colored as we want it, even if there is an unterminated comment or string in the code
\G%>
FALSE
FALSE
32
0


0
FALSE
FALSE
FALSE
FALSE

0
<% %>

FALSE

Another tag
Though not valid in XML, we permit < tags to keep syntax coloring consistent while the file is being edited
(?=<)
FALSE
FALSE
6
0


2
FALSE
FALSE
FALSE
FALSE




FALSE

SQ Attribute
1
8
FALSE
0


5
Closing quote

'
FALSE
FALSE
8
0


6
FALSE
FALSE
FALSE
FALSE

0
SQ
xml
FALSE

ASP Expression

(<%\$)[^<>%]++(%>)
FALSE
FALSE
11
0


0
FALSE
FALSE
FALSE
FALSE
1
2


FALSE

ASP script tag

<%#?.*?(?=%>|\z)
FALSE
FALSE
11
0


13
FALSE
FALSE
FALSE
FALSE




FALSE

ASP script closing tag
We didn't include this in the ASP script tag match, so the %> would always be colored as we want it, even if there is an unterminated comment or string in the code
\G%>
FALSE
FALSE
32
0


0
FALSE
FALSE
FALSE
FALSE

0
<% %>

FALSE

Another tag
Though not valid in XML, we permit < tags to keep syntax coloring consistent while the file is being edited
(?=<)
FALSE
FALSE
6
0


2
FALSE
FALSE
FALSE
FALSE




FALSE

DTD Tag
1
7
FALSE
0


7
Double-quoted value

"
FALSE
FALSE
8
0


11
FALSE
FALSE
FALSE
FALSE
0

DTD DQ
xml
FALSE
"
Single-quoted value

'
FALSE
FALSE
8
0


12
FALSE
FALSE
FALSE
FALSE
0

DTD SQ
xml
FALSE
'
Closing >

>
FALSE
FALSE
6
0


2
FALSE
FALSE
FALSE
FALSE

0
<!>
xml
FALSE

DTD Comment

--
FALSE
FALSE
9
0


10
FALSE
FALSE
FALSE
FALSE
0

DTD --
xml
FALSE
--
DTD Parameter

%(?:[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][-.0-9:A-Z_a-z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]*+;)?
FALSE
FALSE
23
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

DTD Operator

[=(),|*+?]++
FALSE
FALSE
23
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Another tag
Though not valid in XML, we permit < tags to keep syntax coloring consistent while the file is being edited
(?=<)
FALSE
FALSE
6
0


2
FALSE
FALSE
FALSE
FALSE




FALSE

DTD Comment
1
9
TRUE
0


3
Closing --

--
FALSE
FALSE
9
0


9
FALSE
FALSE
FALSE
FALSE

0
DTD --
xml
FALSE

URL

\b(?:(?:https?|ftp|file)://|www\.|ftp\.)(?:\([-A-Z0-9+&@#/%=~_|$?!:,.]*\)|[-A-Z0-9+&@#/%=~_|$?!:,.])*(?:\([-A-Z0-9+&@#/%=~_|$?!:,.]*\)|[A-Z0-9+&@#/%=~_|$])
TRUE
FALSE
2
1


0
FALSE
FALSE
FALSE
FALSE




FALSE

email address

\b(?:mailto:)?[A-Z0-9._%+-]++@(?:[A-Z0-9-]++\.)++[A-Z]{2,6}+\b
TRUE
FALSE
2
3


0
FALSE
FALSE
FALSE
FALSE




FALSE

DTD DQ Value
1
17
FALSE
0


2
Closing quote

"
FALSE
FALSE
8
0


9
FALSE
FALSE
FALSE
FALSE

0
DTD DQ
xml
FALSE

Another tag
Though not valid in XML, we permit < tags to keep syntax coloring consistent while the file is being edited
(?=<)
FALSE
FALSE
6
0


2
FALSE
FALSE
FALSE
FALSE




FALSE

DTD SQ Value
1
17
FALSE
0


2
Closing quote

'
FALSE
FALSE
8
0


9
FALSE
FALSE
FALSE
FALSE

0
DTD SQ
xml
FALSE

Another tag
Though not valid in XML, we permit < tags to keep syntax coloring consistent while the file is being edited
(?=<)
FALSE
FALSE
6
0


2
FALSE
FALSE
FALSE
FALSE




FALSE

Delphi
0
0
FALSE
32
//

22
ASP tag
Since this is a detail subscheme, we need to color the opening tag too
\G<%#?
FALSE
FALSE
32
0


0
FALSE
FALSE
FALSE
FALSE
0

<% %>

FALSE
%>
Script tag
Since this is a detail subscheme, we need to color the opening tag too
\G<script[^<>]*+>
FALSE
FALSE
32
0


0
FALSE
FALSE
FALSE
FALSE
0

script
xml
FALSE
</script>
Begin
Reserved words that pair up with "end"; "class" and "interface" are tricky because they only pair up with "end" in type definitions
\b(?>begin|case|record|try|initialization|(?<==\s*)(?:class|interface)(?!\s*+(?:(?:\([^);]*+\))?+\s*+;|of)))\b
TRUE
FALSE
12
0


0
FALSE
FALSE
FALSE
FALSE
0

beginend
code
FALSE
end
End

\bend\b
TRUE
FALSE
12
0


0
FALSE
FALSE
FALSE
FALSE

0
beginend
code
FALSE
begin
Repeat

\brepeat\b
TRUE
FALSE
12
0


0
FALSE
FALSE
FALSE
FALSE
0

repeatuntil
code
FALSE
until
Until

\buntil\b
TRUE
FALSE
12
0


0
FALSE
FALSE
FALSE
FALSE

0
repeatuntil
code
FALSE
repeat
Property

\bproperty\b
TRUE
FALSE
12
0


3
FALSE
FALSE
FALSE
FALSE




FALSE

Reserved words
Must be listed after "begin" so we can match "class" and "interface" with this element if the "begin" element doesn't match them
\b(?>absolute|abstract|and|array|asm?|assembler|automated|cdecl|class|const(?:ructor)?|deprecated|destructor|dispid|dispinterface|div|do(?:wnto)?|dynamic|else|except|exports?|external|far|file|finalization|finally|for(?:ward)?|function|goto|if|implementation|in(?:herited|line|terface)?|is|label|library|message|mod|near|nil|not|object|of|on|or|out|overload|override|packed|pascal|platform|private|procedure|program|protected|public|published|raise|register|reintroduce|resourcestring|safecall|set|shl|shr|stdcall|strict|string|then|threadvar|to|type|unit|uses|var|virtual|while|with|xor)\b
TRUE
FALSE
12
0


0
FALSE
FALSE
FALSE
FALSE



code
FALSE

Float

\b[0-9]++(?:\.[0-9]++(?:E[+-]?[0-9]++)?+|E[+-]?[0-9]++)\b
TRUE
FALSE
20
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Integer

\b[0-9]++\b
TRUE
FALSE
19
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Hexadecimal number

\$[A-F0-9]++\b
TRUE
FALSE
19
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Single-line comment

//.*+
FALSE
FALSE
9
0


0
TRUE
FALSE
FALSE
FALSE




FALSE

Compiler directive
Closing } optional so an unclosed directive is colored until the end of the file
({)\$[^}]*+(})?
FALSE
FALSE
11
0


0
FALSE
FALSE
FALSE
FALSE
1
2
{$}

FALSE
}
Multi-line comment
Closing } optional so an unclosed comment is colored until the end of the file
({)[^}]*+(})?
FALSE
FALSE
9
0


0
TRUE
FALSE
FALSE
FALSE
1
2
{}

FALSE
}
Multi-line comment
We use a toggle subscheme to find the closing tag for performance reasons, since we cannot use a possessive negated character class to skip over the commented text
\(\*
FALSE
FALSE
9
0


15
FALSE
FALSE
FALSE
FALSE
0

(**)

FALSE
*)
Opening parenthesis

\(
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE
0

()
code
FALSE
)
Closing parenthesis

\)
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE

0
()
code
FALSE
(
Opening bracket

\[
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE
0

[]
code
FALSE
]
Closing bracket

]
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE

0
[]
code
FALSE
[
Operator
Since // starts a single line comment, we must not match more than one operator character at the same time (i.e. no quantifier in the regex)
[-+*/:@^<>=]
FALSE
FALSE
23
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

String
Closing ' optional so unclosed strings are colored until the end of the line
(')[^'\r\n]*+('?)
FALSE
FALSE
17
0


0
TRUE
FALSE
FALSE
FALSE
1
2

code
FALSE

Character

#(?:\$[A-F0-9]++|[0-9]++)\b
TRUE
FALSE
16
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Property
1
0
FALSE
32
//

9
Reserved words
These words are only reserved in property definitions
\b(?>read|write|index|default|nodefault|string|array)\b
TRUE
FALSE
12
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

End of property definition

;
FALSE
FALSE
0
0


2
FALSE
FALSE
FALSE
FALSE




FALSE

Single-line comment

//.*+
FALSE
FALSE
9
0


0
TRUE
FALSE
FALSE
FALSE




FALSE

Compiler directive
Closing } optional so an unclosed directive is colored until the end of the file
({)\$[^}]*+(})?
FALSE
FALSE
11
0


0
FALSE
FALSE
FALSE
FALSE
1
2
{$}

FALSE

Multi-line comment
Closing } optional so an unclosed comment is colored until the end of the file
({)[^}]*+(})?
FALSE
FALSE
9
0


0
TRUE
FALSE
FALSE
FALSE
1
2
{}

FALSE

Multi-line comment
We use a toggle subscheme to find the closing tag for performance reasons, since we cannot use a possessive negated character class to skip over the commented text
\(\*
FALSE
FALSE
9
0


15
FALSE
FALSE
FALSE
FALSE
0

(**)

FALSE

Operator
Since // starts a single line comment, we must not match more than one operator character at the same time (i.e. no quantifier in the regex)
[-+*/:@^<>=]
FALSE
FALSE
23
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Brackets

\[
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE
0

[]
code
FALSE

Brackets

]
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE

0
[]
code
FALSE

(*Comment*)
1
9
FALSE
32


1
Closing *)

\*\)
FALSE
FALSE
9
0


1
FALSE
FALSE
FALSE
FALSE

0
(**)

FALSE

WebHub
0
3
FALSE
0
//

14
whteko tag incl <>

<(/)?whteko([^>])*>
FALSE
FALSE
33
0


0
FALSE
FALSE
FALSE
FALSE


/>

FALSE

whdroplet incl <>

<(/)?whdroplet([^>])*>
FALSE
FALSE
34
0


0
FALSE
FALSE
TRUE
FALSE


/>

FALSE

whsketch incl <>

<(/)?whsketch([^>])*>
FALSE
FALSE
36
0


0
FALSE
FALSE
TRUE
FALSE


/>

FALSE

whpagesettingslist

<(/)?whpagesettingslist([^>])*>
FALSE
FALSE
12
0


0
FALSE
FALSE
TRUE
FALSE


/>

FALSE

whpagesettings

<(/)?whpagesettings([^>])*
FALSE
FALSE
12
0


0
FALSE
FALSE
TRUE
FALSE


/>

FALSE

whpage

<(/)?whpage([^>])*>
FALSE
FALSE
26
0


0
FALSE
FALSE
FALSE
FALSE


/>

FALSE

whdoc

<(/)?whdoc([^>])*>
FALSE
FALSE
36
0


0
FALSE
FALSE
FALSE
FALSE


/>

FALSE

whdesign

<(/)?whdesign([^>])*>
FALSE
FALSE
36
0


0
FALSE
FALSE
FALSE
FALSE


/>

FALSE

whremote

<(/)?whremote([^>])*>
FALSE
FALSE
25
0


0
FALSE
FALSE
FALSE
FALSE


/>

FALSE

whprep

<(/)?whprep([^>])*>
FALSE
FALSE
21
0


0
FALSE
FALSE
FALSE
FALSE


/>

FALSE

whoutput incl <>

<(/)?whoutput([^>])*
FALSE
FALSE
21
0


0
FALSE
FALSE
TRUE
FALSE


/>

FALSE

whmacros

<(/)?whmacros>
FALSE
FALSE
35
0


0
FALSE
FALSE
TRUE
FALSE


/>

FALSE

whtranslations

<(/)?whtranslations>
FALSE
FALSE
37
0


0
FALSE
FALSE
TRUE
FALSE


/>

FALSE

whtranslation

<(/)?whtranslation([^>])*>
FALSE
FALSE
37
0


0
FALSE
FALSE
TRUE
FALSE


/>

FALSE

